plugins {
    id 'java-library'
}

group = 'org.mikeneck.httpspec'
version = {
    def versionFromEnv = System.getenv('HTTP_SPEC_VERSION')
    (versionFromEnv == null || versionFromEnv.empty)? '0.0.0': versionFromEnv
}()

repositories {
    mavenCentral()
}

configurations {
    googleJavaFormat
}

dependencies {
    compileOnlyApi 'org.jetbrains:annotations:20.0.0'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'

    googleJavaFormat 'com.google.googlejavaformat:google-java-format:1.9'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

tasks.named('test') {
    // Use junit platform for unit tests.
    useJUnitPlatform()
}

task googleJavaFormat(group: 'formatter') {
    inputs.files(sourceSets.collect { it.allJava })
    doLast {
        javaexec { JavaExecSpec spec ->
            spec.mainClass.set('com.google.googlejavaformat.java.Main')
            spec.classpath(configurations.googleJavaFormat)
            //noinspection GroovyAssignabilityCheck
            List<String> javaFiles = sourceSets.collect { SourceSet s ->
                s.allJava.asList() 
            }.flatten().collect { File f ->
                f.absoluteFile.toString()
            }
            spec.args([['-r'], javaFiles].flatten())
        }
    }
}
